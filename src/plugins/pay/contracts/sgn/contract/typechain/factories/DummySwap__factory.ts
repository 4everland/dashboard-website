/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DummySwap, DummySwapInterface } from "../DummySwap";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fakeSlippage",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fakeSlippage",
        type: "uint256",
      },
    ],
    name: "setFakeSlippage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactTokensForTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052620f424060015534801561001757600080fd5b506040516109063803806109068339810160408190526100369161003e565b600055610057565b60006020828403121561005057600080fd5b5051919050565b6108a0806100666000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806338ed17391461003b578063d155615514610064575b600080fd5b61004e61004936600461062b565b610079565b60405161005b91906106cd565b60405180910390f35b610077610072366004610711565b600055565b005b6060811580159061008957504282115b6100da5760405162461bcd60e51b815260206004820152601160248201527f646561646c696e6520657863656564656400000000000000000000000000000060448201526064015b60405180910390fd5b600184116101505760405162461bcd60e51b815260206004820152602660248201527f70617468206d7573742068617665206d6f7265207468616e203120746f6b656e60448201527f20696e206974000000000000000000000000000000000000000000000000000060648201526084016100d1565b848460008181106101635761016361072a565b90506020020160208101906101789190610740565b6040516323b872dd60e01b8152336004820152306024820152604481018990526001600160a01b0391909116906323b872dd90606401602060405180830381600087803b1580156101c857600080fd5b505af11580156101dc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610200919061075b565b5060006001546000546001546102169190610793565b610220908a6107aa565b61022a91906107c9565b905086811161027b5760405162461bcd60e51b815260206004820152600c60248201527f62616420736c697070616765000000000000000000000000000000000000000060448201526064016100d1565b6102c18482888861028d600182610793565b81811061029c5761029c61072a565b90506020020160208101906102b19190610740565b6001600160a01b0316919061032d565b60408051600280825260608201835260009260208301908036833701905050905088816000815181106102f6576102f661072a565b60200260200101818152505081816001815181106103165761031661072a565b602090810291909101015298975050505050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b179052610394908490610399565b505050565b60006103ee826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661047e9092919063ffffffff16565b805190915015610394578080602001905181019061040c919061075b565b6103945760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016100d1565b606061048d8484600085610497565b90505b9392505050565b60608247101561050f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016100d1565b843b61055d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016100d1565b600080866001600160a01b03168587604051610579919061081b565b60006040518083038185875af1925050503d80600081146105b6576040519150601f19603f3d011682016040523d82523d6000602084013e6105bb565b606091505b50915091506105cb8282866105d6565b979650505050505050565b606083156105e5575081610490565b8251156105f55782518084602001fd5b8160405162461bcd60e51b81526004016100d19190610837565b80356001600160a01b038116811461062657600080fd5b919050565b60008060008060008060a0878903121561064457600080fd5b8635955060208701359450604087013567ffffffffffffffff8082111561066a57600080fd5b818901915089601f83011261067e57600080fd5b81358181111561068d57600080fd5b8a60208260051b85010111156106a257600080fd5b6020830196508095505050506106ba6060880161060f565b9150608087013590509295509295509295565b6020808252825182820181905260009190848201906040850190845b81811015610705578351835292840192918401916001016106e9565b50909695505050505050565b60006020828403121561072357600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561075257600080fd5b6104908261060f565b60006020828403121561076d57600080fd5b8151801515811461049057600080fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156107a5576107a561077d565b500390565b60008160001904831182151516156107c4576107c461077d565b500290565b6000826107e657634e487b7160e01b600052601260045260246000fd5b500490565b60005b838110156108065781810151838201526020016107ee565b83811115610815576000848401525b50505050565b6000825161082d8184602087016107eb565b9190910192915050565b60208152600082518060208401526108568160408501602087016107eb565b601f01601f1916919091016040019291505056fea2646970667358221220b8dd63d7173f55dc81f31a7f48983c451dcb4916d9f989eaf919bb94846c451964736f6c63430008090033";

export class DummySwap__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _fakeSlippage: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DummySwap> {
    return super.deploy(_fakeSlippage, overrides || {}) as Promise<DummySwap>;
  }
  getDeployTransaction(
    _fakeSlippage: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_fakeSlippage, overrides || {});
  }
  attach(address: string): DummySwap {
    return super.attach(address) as DummySwap;
  }
  connect(signer: Signer): DummySwap__factory {
    return super.connect(signer) as DummySwap__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DummySwapInterface {
    return new utils.Interface(_abi) as DummySwapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DummySwap {
    return new Contract(address, _abi, signerOrProvider) as DummySwap;
  }
}
