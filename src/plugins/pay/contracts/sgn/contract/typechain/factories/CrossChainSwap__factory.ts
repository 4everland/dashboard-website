/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CrossChainSwap,
  CrossChainSwapInterface,
} from "../CrossChainSwap";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "dex_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "dex",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_srcChainId",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "executeMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_srcChainId",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "executeMessageWithTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_srcChainId",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "executeMessageWithTransferFallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidityBridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "msgBus",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pegBridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pegVault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "setLiquidityBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "setMsgBus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "setPegBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "setPegVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "enum MsgSenderApp.BridgeType",
        name: "bt",
        type: "uint8",
      },
    ],
    name: "setTokenBridgeType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "_dstChainId",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "address",
            name: "wantToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "bool",
            name: "sendBack",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "cbrMaxSlippage",
            type: "uint32",
          },
        ],
        internalType: "struct CrossChainSwap.SwapInfo",
        name: "swapInfo",
        type: "tuple",
      },
    ],
    name: "startCrossChainSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenBridgeTypes",
    outputs: [
      {
        internalType: "enum MsgSenderApp.BridgeType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001e1538038062001e158339810160408190526200003491620000b5565b6200003f3362000065565b600680546001600160a01b0319166001600160a01b0392909216919091179055620000e7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215620000c857600080fd5b81516001600160a01b0381168114620000e057600080fd5b9392505050565b611d1e80620000f76000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c806382980dc4116100b2578063d8257d1711610081578063f00f39ce11610066578063f00f39ce1461028b578063f2fde38b1461029e578063f88954dc146102b157600080fd5b8063d8257d1714610265578063dfa2dbaf1461027857600080fd5b806382980dc41461021b5780638da5cb5b1461022e5780639b05a7751461023f578063ce35dd9a1461025257600080fd5b806344f653eb11610109578063692058c2116100ee578063692058c2146101d5578063715018a6146102005780637de805881461020857600080fd5b806344f653eb146101af578063588be02b146101c257600080fd5b806303cbfe661461013b5780631599d2651461015057806328c9c35e146101635780633f0bbc4c1461019c575b600080fd5b61014e6101493660046115ca565b6102c4565b005b61014e61015e36600461164d565b610345565b6101866101713660046115ca565b60056020526000908152604090205460ff1681565b60405161019391906116c6565b60405180910390f35b61014e6101aa3660046116ee565b6103a5565b61014e6101bd3660046115ca565b61043d565b61014e6101d03660046115ca565b6104b9565b6006546101e8906001600160a01b031681565b6040516001600160a01b039091168152602001610193565b61014e610535565b6001546101e8906001600160a01b031681565b6002546101e8906001600160a01b031681565b6000546001600160a01b03166101e8565b61014e61024d3660046115ca565b61059b565b61014e610260366004611772565b610617565b6004546101e8906001600160a01b031681565b6003546101e8906001600160a01b031681565b61014e610299366004611847565b610974565b61014e6102ac3660046115ca565b6109d6565b61014e6102bf3660046118ca565b610ab8565b6000546001600160a01b031633146103235760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b0316331461039f5760405162461bcd60e51b815260206004820152601960248201527f63616c6c6572206973206e6f74206d6573736167652062757300000000000000604482015260640161031a565b50505050565b6000546001600160a01b031633146103ff5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161031a565b6001600160a01b0382166000908152600560205260409020805482919060ff19166001836003811115610434576104346116b0565b02179055505050565b6000546001600160a01b031633146104975760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161031a565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146105135760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161031a565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461058f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161031a565b6105996000610b7f565b565b6000546001600160a01b031633146105f55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161031a565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031633146106715760405162461bcd60e51b815260206004820152601960248201527f63616c6c6572206973206e6f74206d6573736167652062757300000000000000604482015260640161031a565b6000818060200190518101906106879190611959565b60065460405163095ea7b360e01b81526001600160a01b0391821660048201526024810187905291925086169063095ea7b390604401602060405180830381600087803b1580156106d757600080fd5b505af11580156106eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070f91906119de565b506040805160028082526060820183526000926020830190803683370190505090508581600081518110610745576107456119fb565b60200260200101906001600160a01b031690816001600160a01b03168152505081600001518160018151811061077d5761077d6119fb565b60200260200101906001600160a01b031690816001600160a01b0316815250508160400151156108d4576001600660148282829054906101000a900467ffffffffffffffff166107cd9190611a27565b825467ffffffffffffffff9182166101009390930a9283029190920219909116179055506006546040516338ed173960e01b81526000916001600160a01b0316906338ed17399061082c90899085908790309060001990600401611a53565b600060405180830381600087803b15801561084657600080fd5b505af115801561085a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108829190810190611ac4565b90506108ce83602001518460000151836001815181106108a4576108a46119fb565b602002602001015188600660149054906101000a900467ffffffffffffffff168860600151610bcf565b5061096b565b60065460208301516040516338ed173960e01b81526001600160a01b03909216916338ed17399161091391899160009187919060001990600401611a53565b600060405180830381600087803b15801561092d57600080fd5b505af1158015610941573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109699190810190611ac4565b505b50505050505050565b6001546001600160a01b031633146109ce5760405162461bcd60e51b815260206004820152601960248201527f63616c6c6572206973206e6f74206d6573736167652062757300000000000000604482015260640161031a565b505050505050565b6000546001600160a01b03163314610a305760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161031a565b6001600160a01b038116610aac5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161031a565b610ab581610b7f565b50565b6001600660148282829054906101000a900467ffffffffffffffff16610ade9190611a27565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550610b24333085876001600160a01b0316610ddf909392919063ffffffff16565b600081604051602001610b379190611b6a565b60405160208183030381529060405290506109ce86868686600660149054906101000a900467ffffffffffffffff16876060016020810190610b799190611bd1565b87610e77565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03851660009081526005602052604090205460ff166001816003811115610bff57610bff6116b0565b1415610cb757600254610c1f906001600160a01b03888116911687611279565b60025460405163a5977fbb60e01b81526001600160a01b03898116600483015288811660248301526044820188905267ffffffffffffffff80881660648401528616608483015263ffffffff851660a48301529091169063a5977fbb9060c4015b600060405180830381600087803b158015610c9a57600080fd5b505af1158015610cae573d6000803e3d6000fd5b5050505061096b565b6002816003811115610ccb57610ccb6116b0565b1415610d2c57600480546040516308d18d8960e21b81526001600160a01b03898116938201939093526024810188905267ffffffffffffffff80881660448301528a841660648301528616608482015291169063234636249060a401610c80565b6003816003811115610d4057610d406116b0565b1415610d9757600354604051636f3c863f60e11b81526001600160a01b03888116600483015260248201889052898116604483015267ffffffffffffffff861660648301529091169063de790c7e90608401610c80565b60405162461bcd60e51b815260206004820152601a60248201527f62726964676520746f6b656e206e6f7420737570706f72746564000000000000604482015260640161031a565b6040516001600160a01b038085166024830152831660448201526064810182905261039f9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261133a565b6001600160a01b03861660009081526005602052604081205460ff1690806001836003811115610ea957610ea96116b0565b1415610fe5576002546001600160a01b039081169250610ecc908a16838a611279565b60025460405163a5977fbb60e01b81526001600160a01b038c811660048301528b81166024830152604482018b905267ffffffffffffffff808b1660648401528916608483015263ffffffff881660a48301529091169063a5977fbb9060c401600060405180830381600087803b158015610f4657600080fd5b505af1158015610f5a573d6000803e3d6000fd5b50506040516bffffffffffffffffffffffff1930606090811b821660208401528e811b821660348401528d901b166048820152605c81018b90526001600160c01b031960c08b811b8216607c8401528a811b8216608484015246901b16608c8201526094019150610fc89050565b604051602081830303815290604052805190602001209050611203565b6002836003811115610ff957610ff96116b0565b141561110857600480546040516308d18d8960e21b81526001600160a01b038c811693820193909352602481018b905267ffffffffffffffff808b1660448301528d841660648301528916608482015291169250829063234636249060a401600060405180830381600087803b15801561107257600080fd5b505af1158015611086573d6000803e3d6000fd5b50505050308989898d8a46604051602001610fc89796959493929190606097881b6bffffffffffffffffffffffff19908116825296881b87166014820152602881019590955260c093841b6001600160c01b031990811660488701529290961b909416605084015292811b831660648301529290921b16606c82015260740190565b600383600381111561111c5761111c6116b0565b1415610d9757600354604051636f3c863f60e11b81526001600160a01b038b81166004830152602482018b90528c8116604483015267ffffffffffffffff891660648301529091169250829063de790c7e90608401600060405180830381600087803b15801561118b57600080fd5b505af115801561119f573d6000803e3d6000fd5b50506040516bffffffffffffffffffffffff1930606090811b821660208401528d811b82166034840152604883018d90528e901b1660688201526001600160c01b031960c08a811b8216607c84015246901b166084820152608c019150610fc89050565b600154604051634289fbb360e01b81526001600160a01b0390911690634289fbb39061123b908d908b90879087908b90600401611c46565b600060405180830381600087803b15801561125557600080fd5b505af1158015611269573d6000803e3d6000fd5b5050505050505050505050505050565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e9060440160206040518083038186803b1580156112c557600080fd5b505afa1580156112d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112fd9190611c88565b6113079190611ca1565b6040516001600160a01b03851660248201526044810182905290915061039f90859063095ea7b360e01b90606401610e13565b600061138f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166114249092919063ffffffff16565b80519091501561141f57808060200190518101906113ad91906119de565b61141f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161031a565b505050565b6060611433848460008561143d565b90505b9392505050565b6060824710156114b55760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161031a565b843b6115035760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161031a565b600080866001600160a01b0316858760405161151f9190611cb9565b60006040518083038185875af1925050503d806000811461155c576040519150601f19603f3d011682016040523d82523d6000602084013e611561565b606091505b509150915061157182828661157c565b979650505050505050565b6060831561158b575081611436565b82511561159b5782518084602001fd5b8160405162461bcd60e51b815260040161031a9190611cd5565b6001600160a01b0381168114610ab557600080fd5b6000602082840312156115dc57600080fd5b8135611436816115b5565b803567ffffffffffffffff811681146115ff57600080fd5b919050565b60008083601f84011261161657600080fd5b50813567ffffffffffffffff81111561162e57600080fd5b60208301915083602082850101111561164657600080fd5b9250929050565b6000806000806060858703121561166357600080fd5b843561166e816115b5565b935061167c602086016115e7565b9250604085013567ffffffffffffffff81111561169857600080fd5b6116a487828801611604565b95989497509550505050565b634e487b7160e01b600052602160045260246000fd5b60208101600483106116e857634e487b7160e01b600052602160045260246000fd5b91905290565b6000806040838503121561170157600080fd5b823561170c816115b5565b915060208301356004811061172057600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561176a5761176a61172b565b604052919050565b600080600080600060a0868803121561178a57600080fd5b8535611795816115b5565b94506020868101356117a6816115b5565b9450604087013593506117bb606088016115e7565b9250608087013567ffffffffffffffff808211156117d857600080fd5b818901915089601f8301126117ec57600080fd5b8135818111156117fe576117fe61172b565b611810601f8201601f19168501611741565b91508082528a8482850101111561182657600080fd5b80848401858401376000848284010152508093505050509295509295909350565b60008060008060008060a0878903121561186057600080fd5b863561186b816115b5565b9550602087013561187b816115b5565b945060408701359350611890606088016115e7565b9250608087013567ffffffffffffffff8111156118ac57600080fd5b6118b889828a01611604565b979a9699509497509295939492505050565b60008060008060008587036101008112156118e457600080fd5b86356118ef816115b5565b955060208701356118ff816115b5565b945060408701359350611914606088016115e7565b92506080607f198201121561192857600080fd5b506080860190509295509295909350565b8015158114610ab557600080fd5b63ffffffff81168114610ab557600080fd5b60006080828403121561196b57600080fd5b6040516080810181811067ffffffffffffffff8211171561198e5761198e61172b565b604052825161199c816115b5565b815260208301516119ac816115b5565b602082015260408301516119bf81611939565b604082015260608301516119d281611947565b60608201529392505050565b6000602082840312156119f057600080fd5b815161143681611939565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600067ffffffffffffffff808316818516808303821115611a4a57611a4a611a11565b01949350505050565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b81811015611aa35784516001600160a01b031683529383019391830191600101611a7e565b50506001600160a01b03969096166060850152505050608001529392505050565b60006020808385031215611ad757600080fd5b825167ffffffffffffffff80821115611aef57600080fd5b818501915085601f830112611b0357600080fd5b815181811115611b1557611b1561172b565b8060051b9150611b26848301611741565b8181529183018401918481019088841115611b4057600080fd5b938501935b83851015611b5e57845182529385019390850190611b45565b98975050505050505050565b608081018235611b79816115b5565b6001600160a01b039081168352602084013590611b95826115b5565b1660208301526040830135611ba981611939565b151560408301526060830135611bbe81611947565b63ffffffff811660608401525092915050565b600060208284031215611be357600080fd5b813561143681611947565b60005b83811015611c09578181015183820152602001611bf1565b8381111561039f5750506000910152565b60008151808452611c32816020860160208601611bee565b601f01601f19169290920160200192915050565b60006001600160a01b03808816835267ffffffffffffffff8716602084015280861660408401525083606083015260a0608083015261157160a0830184611c1a565b600060208284031215611c9a57600080fd5b5051919050565b60008219821115611cb457611cb4611a11565b500190565b60008251611ccb818460208701611bee565b9190910192915050565b6020815260006114366020830184611c1a56fea2646970667358221220f2563a0d45b9c194dbe66db5930d7a13e479a9c1a4f237f31e50f91b7d7eed6364736f6c63430008090033";

export class CrossChainSwap__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    dex_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CrossChainSwap> {
    return super.deploy(dex_, overrides || {}) as Promise<CrossChainSwap>;
  }
  getDeployTransaction(
    dex_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(dex_, overrides || {});
  }
  attach(address: string): CrossChainSwap {
    return super.attach(address) as CrossChainSwap;
  }
  connect(signer: Signer): CrossChainSwap__factory {
    return super.connect(signer) as CrossChainSwap__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrossChainSwapInterface {
    return new utils.Interface(_abi) as CrossChainSwapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrossChainSwap {
    return new Contract(address, _abi, signerOrProvider) as CrossChainSwap;
  }
}
