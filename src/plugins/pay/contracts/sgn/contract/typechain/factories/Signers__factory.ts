/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Signers, SignersInterface } from "../Signers";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "resetTime",
        type: "uint256",
      },
    ],
    name: "ResetNotification",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "_signers",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_powers",
        type: "uint256[]",
      },
    ],
    name: "SignersUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "period",
        type: "uint256",
      },
    ],
    name: "increaseNoticePeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "noticePeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "notifyResetSigners",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_signers",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_powers",
        type: "uint256[]",
      },
    ],
    name: "resetSigners",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "resetTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ssHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "triggerTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_triggerTime",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_newSigners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_newPowers",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "_sigs",
        type: "bytes[]",
      },
      {
        internalType: "address[]",
        name: "_curSigners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_curPowers",
        type: "uint256[]",
      },
    ],
    name: "updateSigners",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_msg",
        type: "bytes",
      },
      {
        internalType: "bytes[]",
        name: "_sigs",
        type: "bytes[]",
      },
      {
        internalType: "address[]",
        name: "_signers",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_powers",
        type: "uint256[]",
      },
    ],
    name: "verifySigs",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6114e08061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c80639b14d4c611610081578063d0790da91161005b578063d0790da91461016d578063f20c922a14610176578063f2fde38b1461018957600080fd5b80639b14d4c61461013e578063a7bdf45a14610147578063ba2cb25c1461015a57600080fd5b8063682dbc22116100b2578063682dbc2214610108578063715018a61461011b5780638da5cb5b1461012357600080fd5b806325c38b9f146100d9578063370fb47b146100e357806365a114f1146100ff575b600080fd5b6100e161019c565b005b6100ec60025481565b6040519081526020015b60405180910390f35b6100ec60035481565b6100e1610116366004610fa5565b610242565b6100e161032e565b6000546040516001600160a01b0390911681526020016100f6565b6100ec60045481565b6100e16101553660046110d3565b610394565b6100e161016836600461113f565b610457565b6100ec60015481565b6100e161018436600461123f565b6105c7565b6100e1610197366004611274565b610683565b6000546001600160a01b031633146101fb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b60045461020890426112ac565b60038190556040519081527f68e825132f7d4bc837dea2d64ac9fc19912bf0224b67f9317d8f1a917f5304a19060200160405180910390a1565b60008484848460405160200161025b9493929190611330565b60405160208183030381529060405280519060200120905080600154146102c45760405162461bcd60e51b815260206004820152601860248201527f4d69736d617463682063757272656e74207369676e657273000000000000000060448201526064016101f2565b87516020808a0191909120604080517f19457468657265756d205369676e6564204d6573736167653a0a33320000000081850152603c8082019390935281518082039093018352605c019052805191012061032490888888888888610765565b5050505050505050565b6000546001600160a01b031633146103885760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101f2565b6103926000610a9b565b565b6000546001600160a01b031633146103ee5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101f2565b600354421161043f5760405162461bcd60e51b815260206004820152601460248201527f6e6f742072656163682072657365742074696d6500000000000000000000000060448201526064016101f2565b60001960035561045184848484610b03565b50505050565b6002548b116104a85760405162461bcd60e51b815260206004820152601e60248201527f547269676765722074696d65206973206e6f7420696e6372656173696e67000060448201526064016101f2565b6104b442610e106112ac565b8b106105025760405162461bcd60e51b815260206004820152601960248201527f547269676765722074696d6520697320746f6f206c617267650000000000000060448201526064016101f2565b6000463060405160200161055892919091825260601b6bffffffffffffffffffffffff191660208201527f5570646174655369676e65727300000000000000000000000000000000000000603482015260410190565b6040516020818303038152906040528051906020012090506105a8818d8d8d8d8d60405160200161058e96959493929190611347565b604051602081830303815290604052888888888888610242565b6105b48b8b8b8b610b03565b5050506002989098555050505050505050565b6000546001600160a01b031633146106215760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101f2565b600454811161067e5760405162461bcd60e51b815260206004820152602360248201527f6e6f7469636520706572696f642063616e206f6e6c7920626520696e637265616044820152621cd95960ea1b60648201526084016101f2565b600455565b6000546001600160a01b031633146106dd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101f2565b6001600160a01b0381166107595760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016101f2565b61076281610a9b565b50565b8281146107c05760405162461bcd60e51b815260206004820152602360248201527f7369676e65727320616e6420706f77657273206c656e677468206e6f74206d616044820152620e8c6d60eb1b60648201526084016101f2565b6000805b84811015610804578383828181106107de576107de61136f565b90506020020135826107f091906112ac565b9150806107fc81611385565b9150506107c4565b50600060036108148360026113a0565b61081e91906113bf565b6108299060016112ac565b905060008080805b8a811015610a495760006108b48d8d848181106108505761085061136f565b905060200281019061086291906113e1565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508f610cad90919063ffffffff16565b9050836001600160a01b0316816001600160a01b0316116109175760405162461bcd60e51b815260206004820152601e60248201527f7369676e657273206e6f7420696e20617363656e64696e67206f72646572000060448201526064016101f2565b8093505b8a8a8481811061092d5761092d61136f565b90506020020160208101906109429190611274565b6001600160a01b0316816001600160a01b031611156109bc576109666001846112ac565b92508983106109b75760405162461bcd60e51b815260206004820152601060248201527f7369676e6572206e6f7420666f756e640000000000000000000000000000000060448201526064016101f2565b61091b565b8a8a848181106109ce576109ce61136f565b90506020020160208101906109e39190611274565b6001600160a01b0316816001600160a01b03161415610a2357888884818110610a0e57610a0e61136f565b9050602002013585610a2091906112ac565b94505b858510610a365750505050505050610a92565b5080610a4181611385565b915050610831565b5060405162461bcd60e51b815260206004820152601260248201527f71756f72756d206e6f742072656163686564000000000000000000000000000060448201526064016101f2565b50505050505050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828114610b5e5760405162461bcd60e51b815260206004820152602360248201527f7369676e65727320616e6420706f77657273206c656e677468206e6f74206d616044820152620e8c6d60eb1b60648201526084016101f2565b6000805b84811015610c3757816001600160a01b0316868683818110610b8657610b8661136f565b9050602002016020810190610b9b9190611274565b6001600160a01b031611610bfc5760405162461bcd60e51b815260206004820152602260248201527f4e6577207369676e657273206e6f7420696e20617363656e64696e67206f726460448201526132b960f11b60648201526084016101f2565b858582818110610c0e57610c0e61136f565b9050602002016020810190610c239190611274565b915080610c2f81611385565b915050610b62565b5084848484604051602001610c4f9493929190611330565b60408051601f198184030181529082905280516020909101206001557ff126123539a68393c55697f617e7d1148e371988daed246c2f41da99965a23f890610c9e908790879087908790611428565b60405180910390a15050505050565b6000815160411415610ce15760208201516040830151606084015160001a610cd786828585610d57565b9350505050610d51565b815160401415610d095760208201516040830151610d00858383610f00565b92505050610d51565b60405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016101f2565b92915050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0821115610dd45760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016101f2565b8360ff16601b1480610de957508360ff16601c145b610e405760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016101f2565b6040805160008082526020820180845288905260ff871692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa158015610e94573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610ef75760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016101f2565b95945050505050565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821660ff83901c601b01610f3986828785610d57565b9695505050505050565b634e487b7160e01b600052604160045260246000fd5b60008083601f840112610f6b57600080fd5b50813567ffffffffffffffff811115610f8357600080fd5b6020830191508360208260051b8501011115610f9e57600080fd5b9250929050565b60008060008060008060006080888a031215610fc057600080fd5b873567ffffffffffffffff80821115610fd857600080fd5b818a0191508a601f830112610fec57600080fd5b813581811115610ffe57610ffe610f43565b604051601f8201601f19908116603f0116810190838211818310171561102657611026610f43565b816040528281528d602084870101111561103f57600080fd5b82602086016020830137600094508460208483010152809b5050505060208a01358181111561106c578283fd5b6110788c828d01610f59565b90995097505060408a01358181111561108f578283fd5b61109b8c828d01610f59565b90975095505060608a0135818111156110b2578283fd5b6110be8c828d01610f59565b9a9d999c50979a509598949794955050505050565b600080600080604085870312156110e957600080fd5b843567ffffffffffffffff8082111561110157600080fd5b61110d88838901610f59565b9096509450602087013591508082111561112657600080fd5b5061113387828801610f59565b95989497509550505050565b600080600080600080600080600080600060c08c8e03121561116057600080fd5b8b359a5067ffffffffffffffff8060208e0135111561117e57600080fd5b61118e8e60208f01358f01610f59565b909b50995060408d01358110156111a457600080fd5b6111b48e60408f01358f01610f59565b909950975060608d01358110156111ca57600080fd5b6111da8e60608f01358f01610f59565b909750955060808d01358110156111f057600080fd5b6112008e60808f01358f01610f59565b909550935060a08d013581101561121657600080fd5b506112278d60a08e01358e01610f59565b81935080925050509295989b509295989b9093969950565b60006020828403121561125157600080fd5b5035919050565b80356001600160a01b038116811461126f57600080fd5b919050565b60006020828403121561128657600080fd5b61128f82611258565b9392505050565b634e487b7160e01b600052601160045260246000fd5b600082198211156112bf576112bf611296565b500190565b60008160005b848110156112f9576001600160a01b036112e383611258565b16865260209586019591909101906001016112ca565b5093949350505050565b60006001600160fb1b0383111561131957600080fd5b8260051b8083863760009401938452509192915050565b6000610f396113408387896112c4565b8486611303565b86815285602082015260006113636113406040840187896112c4565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b600060001982141561139957611399611296565b5060010190565b60008160001904831182151516156113ba576113ba611296565b500290565b6000826113dc57634e487b7160e01b600052601260045260246000fd5b500490565b6000808335601e198436030181126113f857600080fd5b83018035915067ffffffffffffffff82111561141357600080fd5b602001915036819003821315610f9e57600080fd5b6040808252810184905260008560608301825b87811015611469576001600160a01b0361145484611258565b1682526020928301929091019060010161143b565b5083810360208501528481526001600160fb1b0385111561148957600080fd5b8460051b91508186602083013760009101602001908152969550505050505056fea2646970667358221220c314e19419c0a5f313d91b06472c77a1d70667252dfbbbcd10d3b044e56cd74264736f6c63430008090033";

export class Signers__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Signers> {
    return super.deploy(overrides || {}) as Promise<Signers>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Signers {
    return super.attach(address) as Signers;
  }
  connect(signer: Signer): Signers__factory {
    return super.connect(signer) as Signers__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignersInterface {
    return new utils.Interface(_abi) as SignersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Signers {
    return new Contract(address, _abi, signerOrProvider) as Signers;
  }
}
