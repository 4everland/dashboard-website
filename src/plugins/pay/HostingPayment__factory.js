/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { utils, Contract, ContractFactory } from "ethers";
import abiData from "./abi";

const _abi = abiData.abi;

const _bytecode = abiData.bytecode;
export class HostingPayment__factory extends ContractFactory {
  constructor(
    ...args //: [signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    owner,
    _channel,
    overrides //?: Overrides & { from? | Promise<string> }
  ) {
    return super.deploy(owner, _channel, overrides || {}); // as Promise<HostingPayment>;
  }
  getDeployTransaction(
    owner,
    _channel,
    overrides //?: Overrides & { from? | Promise<string> }
  ) {
    return super.getDeployTransaction(owner, _channel, overrides || {});
  }
  attach(address) {
    return super.attach(address);
  }
  connect(signer) {
    return super.connect(signer);
  }
  static bytecode = _bytecode;
  static abi = _abi;
  static createInterface() {
    return new utils.Interface(_abi);
  }
  static connect(address, signerOrProvider) {
    return new Contract(address, _abi, signerOrProvider);
  }
}
